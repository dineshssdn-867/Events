"""
Django settings for social_app project.

Generated by 'django-admin startproject' using Django 3.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

import os
import json
import pathlib
import psycopg2
import cloudinary
import cloudinary_storage
from decouple import config
import django_heroku


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-kj#v#ruhja$cw4p%@5&5zj@z0qw477k0jc%bt5tlhrngi@%$aq'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    'social_home',
    'aboutus',
    'contactus',
    'users',
    'events',
    'django_quill',
    'happy_blog',
    'blogs',
    'clubs',
    'praposal',
    'pwa',
    'cloudinary',
    'cloudinary_storage',
    'compressor',
    'cachalot'
]


AUTH_USER_MODEL = "users.CustomUser"

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.http.ConditionalGetMiddleware',
    'django.middleware.gzip.GZipMiddleware',
    'htmlmin.middleware.HtmlMinifyMiddleware',
    'htmlmin.middleware.MarkRequestMiddleware',
]

CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_HEADERS = (
    'x-requested-with',
    'content-type',
    'accept',
    'origin',
    'authorization',
    'accept-encoding',
    'x-csrftoken',
    'access-control-allow-origin',
    'content-disposition',
)
CORS_ALLOW_CREDENTIALS = False
CORS_ALLOW_METHODS = ('GET', 'POST', 'PUT', 'PATCH', 'DELETE', 'OPTIONS')

ROOT_URLCONF = 'social_app.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': False,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
            'loaders': [
                ('django.template.loaders.cached.Loader', [
                    'django.template.loaders.filesystem.Loader',
                    'django.template.loaders.app_directories.Loader',
                ]),
            ],
        },
    },
]

WSGI_APPLICATION = 'social_app.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

""" DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'main_social_app',
        'USER': 'postgres',
        'PASSWORD': 'ssdn123!',
        'HOST': 'localhost',
        'PORT': '5432',
    },
    'contact': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'contact_us',
        'USER': 'postgres',
        'PASSWORD': 'ssdn123!',
        'HOST': 'localhost',
        'PORT': '5432',
    },
    'blogs': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'blog_s',
        'USER': 'postgres',
        'PASSWORD': 'ssdn123!',
        'HOST': 'localhost',
        'PORT': '5432',
    },
} """


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    },
    'contact': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db1.sqlite3'),
    },
    'blogs': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db2.sqlite3'),
    },

}

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = "Asia/Kolkata"

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/


MEDIA_URL = '/social/'
MEDIA_ROOT = os.path.join(BASE_DIR, "media")

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

DATABASE_ROUTERS = ['social_app.db_routers.ContactRouter', 'social_app.db_routers.BlogRouter']

LOGOUT_REDIRECT_URL = '/'
LOGIN_REDIRECT_URL = '/'

EMAIL_HOST = config('smtp_server')
EMAIL_PORT = config('port')
EMAIL_HOST_USER = config("sender_email")
EMAIL_HOST_PASSWORD = config("password")
MAIL_USE_TLS = True
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'

QUILL_CONFIGS = {
    'default': {
        'theme': 'snow',
        'modules': {
            'syntax': True,
            'toolbar': [
                [
                    {'font': []},
                    {'header': [1, 2, False]},
                    {'align': []},
                    'bold', 'italic', 'underline', 'strike', 'blockquote',
                    {'color': []},
                    {'background': ['white']},
                ],
                ['code-block', 'link'],
                ['clean'],
            ],
        }
    }

}


CACHES = {
    'default': {
        'BACKEND': 'django_bmemcached.memcached.BMemcached',
        'LOCATION': 'memcached-10710.c277.us-east-1-3.ec2.cloud.redislabs.com:10710',
        'OPTIONS': {
                    'username': 'memcached-app222471667',
                    'password': 'IzNCGvgt4cCsGgqXxKwEgJ67Vlbizm3C'
            }
    },
    'cache1': {
        'BACKEND': 'django_bmemcached.memcached.BMemcached',
        'LOCATION': 'memcached-11583.c275.us-east-1-4.ec2.cloud.redislabs.com:11583',
        'OPTIONS': {
                    'username': 'memcached-app222524641',
                    'password': '7kRvmp81cATjhpe5Lcl872Cp79JBWchG'
            }
    },
    'cache2': {
        'BACKEND': 'django_bmemcached.memcached.BMemcached',
        'TIMEOUT': None,
        'LOCATION': 'mc5.dev.ec2.memcachier.com:11211',
        'OPTIONS': {
            'username': 'D23767',
            'password': 'EC0FDCDE87944FC50B8086E73048C355',
        }
    },
    'special_cache': {
        'BACKEND': 'django.core.cache.backends.memcached.PyLibMCCache',
        'LOCATION': 'mc3.dev.ec2.memcachier.com:11211',
        'OPTIONS': {
            'binary': True,
            'username': 'FE0DED',
            'password': 'FB842F95699C1375DC19A0FEA587E0BD',
            'behaviors': {
                'ketama': True,
            }
        }
    }
}

CACHALOT_ENABLED=True
CACHALOT_CACHE='special_cache'
CACHALOT_CACHE_RANDOM=True

SESSION_SERIALIZER = 'django.contrib.sessions.serializers.JSONSerializer'  # storing session using serializer
SESSION_ENGINE = 'django.contrib.sessions.backends.cache'  # This is for storing sessions in cache
SESSION_CACHE_ALIAS = 'default'

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATIC_HOST = config('DJANGO_STATIC_HOST')
STATIC_URL = STATIC_HOST + '/static/'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]


# See: https://docs.djangoproject.com/en/dev/ref/contrib/staticfiles/#staticfiles-finders
STATICFILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
    'compressor.finders.CompressorFinder' # Django-Compressor
]

COMPRESS_STORAGE = 'compressor.storage.GzipCompressorFileStorage'
COMPRESS_ENABLED = True
# Must enable this to use with Whitenoise
COMPRESS_OFFLINE = True


MEDIA_URL = '/events/'

CLOUDINARY_STORAGE = {
    'CLOUD_NAME': config('cloud_name'),
    'API_KEY': config('api_key'),
    'API_SECRET': config('api_secret'),
}

# whitenoise
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

DEFAULT_FILE_STORAGE = 'cloudinary_storage.storage.MediaCloudinaryStorage'


PWA_APP_NAME = "Eventa"
PWA_APP_DESCRIPTION = "Event management is the coordinated effort behind planning, organizing, and executing various events or features. This includes weddings, corporate meetings, fundraisers, sporting events, fashion shows, and much more. Event management companies can help you organise a number of different special events that your organisation may be interested in hosting."
PWA_APP_BACKGROUND_COLOR = '#000000'
PWA_APP_DISPLAY = 'standalone'
PWA_APP_SCOPE = '/'
PWA_APP_ORIENTATION = 'any'
PWA_APP_START_URL = '/'
PWA_APP_STATUS_BAR_COLOR = 'default'
PWA_APP_THEME_COLOR = '#0A0302'
PWA_APP_ICONS = [
    {
        'src': '/static/images/ds.png',
        'sizes': '512x512', 'purpose': 'any maskable',
        'src': '/static/images/ds.png',
        'sizes': '512x512', 'purpose': 'any maskable'}
]
PWA_APP_ICONS_APPLE = [
    {
        'src': 'static/images/ds.png',
        'sizes': '512x512'}
]
PWA_APP_SPLASH_SCREEN = [{'src': 'static/images/ds.png',
                          'media': '(device-width: 320px) and (device-height: 568px) and (-webkit-device-pixel-ratio: 2)'}]
PWA_APP_DIR = 'ltr'
PWA_APP_LANG = 'en-US'
PWA_APP_DEBUG_MODE = True

SESSION_COOKIE_SECURE = True
CSRF_COOKIE_SECURE = True
SECURE_SSL_REDIRECT = True

django_heroku.settings(locals())
WHITENOISE_MAX_AGE = 31536000
del DATABASES['default']['OPTIONS']['sslmode']
